using System;
using Microsoft.SharePoint.Client;

namespace SharePointLibraryApp
{
    class Program
    {
        static void Main(string[] args)
        {
            string siteUrl = "https://yourtenant.sharepoint.com/sites/yoursite";
            string libraryName = "Documents";

            try
            {
                // Connect to SharePoint Online
                using (ClientContext context = new ClientContext(siteUrl))
                {
                    // Authentication (username and password)
                    context.Credentials = new SharePointOnlineCredentials("yourusername@domain.com", GetPassword());

                    // Get the target document library
                    List list = context.Web.Lists.GetByTitle(libraryName);

                    // Load the items from the list
                    CamlQuery query = CamlQuery.CreateAllItemsQuery();
                    ListItemCollection items = list.GetItems(query);

                    context.Load(items);
                    context.ExecuteQuery();

                    // Output document names
                    Console.WriteLine("Documents in Library:");
                    foreach (ListItem listItem in items)
                    {
                        Console.WriteLine(listItem["FileLeafRef"]);
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"An error occurred: {ex.Message}");
            }
catch (ClientRequestException cre)
{
    Console.WriteLine($"Connection failed: {cre.Message}");
}
catch (ServerException se)
{
    Console.WriteLine($"Server error: {se.Message}");
}

        }

        // Helper method to retrieve the secure password (can be replaced by a more secure approach)
        private static System.Security.SecureString GetPassword()
        {
            Console.Write("Enter password: ");
            string pass = Console.ReadLine();
            var securePass = new System.Security.SecureString();
            foreach (char c in pass)
            {
                securePass.AppendChar(c);
            }
            return securePass;
        }
    }
}

