Name,Amount
Alice,200
Bob,150
Charlie,250


using iTextSharp.text;
using iTextSharp.text.pdf;
using System;
using System.Collections.Generic;
using System.IO;

class Program
{
    static void Main(string[] args)
    {
        string csvFilePath = @"C:\data\sales_data.csv";
        string pdfFilePath = @"C:\output\SummaryReport.pdf";

        try
        {
            // Read and parse CSV file
            var csvData = ReadCsvFile(csvFilePath);

            // Generate PDF report
            GeneratePdfReport(csvData, pdfFilePath);

            Console.WriteLine("PDF report generated successfully at: " + pdfFilePath);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
    }

    // Function to read and parse CSV file
    static List<Tuple<string, string>> ReadCsvFile(string csvFilePath)
    {
        var csvData = new List<Tuple<string, string>>();
        using (var reader = new StreamReader(csvFilePath))
        {
            string line;
            // Skip header
            reader.ReadLine();

            // Read each line
            while ((line = reader.ReadLine()) != null)
            {
                var values = line.Split(',');
                csvData.Add(new Tuple<string, string>(values[0], values[1]));
            }
        }
        return csvData;
    }

    // Function to generate PDF report
    static void GeneratePdfReport(List<Tuple<string, string>> csvData, string pdfFilePath)
    {
        // Initialize document
        Document document = new Document();
        PdfWriter.GetInstance(document, new FileStream(pdfFilePath, FileMode.Create));
        document.Open();

        // Add title
        Font titleFont = FontFactory.GetFont("Arial", 18, Font.BOLD);
        Paragraph title = new Paragraph("Sales Summary Report", titleFont)
        {
            Alignment = Element.ALIGN_CENTER
        };
        document.Add(title);

        // Add line break
        document.Add(new Paragraph("\n"));

        // Create PDF table with 2 columns (Name, Amount)
        PdfPTable table = new PdfPTable(2);
        table.WidthPercentage = 100;
        table.SetWidths(new float[] { 1, 1 });

        // Add table headers
        AddCellToTable(table, "Name", FontFactory.GetFont("Arial", 12, Font.BOLD), BaseColor.LIGHT_GRAY);
        AddCellToTable(table, "Amount", FontFactory.GetFont("Arial", 12, Font.BOLD), BaseColor.LIGHT_GRAY);

        // Add data rows from CSV
        foreach (var row in csvData)
        {
            AddCellToTable(table, row.Item1, FontFactory.GetFont("Arial", 12, Font.NORMAL), BaseColor.WHITE);
            AddCellToTable(table, row.Item2, FontFactory.GetFont("Arial", 12, Font.NORMAL), BaseColor.WHITE);
        }

        // Add table to document
        document.Add(table);

        // Close document
        document
