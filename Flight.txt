FlightNumber,Origin,Destination,BaseFare,Type
DF123,New York,Chicago,150,Domestic
IF789,New York,London,500,International
DF456,Los Angeles,San Francisco,120,Domestic
IF101,San Francisco,Tokyo,700,International
DF111,Miami,Orlando,90,Domestic

...
using System;
using System.Collections.Generic;
using System.IO;

class Program
{
    static void Main(string[] args)
    {
        List<Flight> flights = new List<Flight>();

        // Read flight data from CSV file
        string filePath = "flights.csv";
        ReadFlightsFromCSV(filePath, flights);

        // Display the flights read from the file
        Console.WriteLine("Flights loaded from file:");
        foreach (Flight flight in flights)
        {
            flight.DisplayDetails();
        }

        // Modify flight data here if necessary...

        // Write updated flight data back to CSV file
        WriteFlightsToCSV(filePath, flights);
    }

    // Method to read flight data from a CSV file
    public static void ReadFlightsFromCSV(string filePath, List<Flight> flights)
    {
        try
        {
            if (!File.Exists(filePath))
            {
                Console.WriteLine("File not found.");
                return;
            }

            using (StreamReader reader = new StreamReader(filePath))
            {
                string line;
                while ((line = reader.ReadLine()) != null)
                {
                    string[] parts = line.Split(',');

                    if (parts.Length != 5) continue;

                    string flightNumber = parts[0];
                    string origin = parts[1];
                    string destination = parts[2];
                    double baseFare = double.Parse(parts[3]);
                    string type = parts[4];

                    Flight flight = null;
                    if (type == "Domestic")
                    {
                        flight = new DomesticFlight(flightNumber, origin, destination, baseFare);
                    }
                    else if (type == "International")
                    {
                        flight = new InternationalFlight(flightNumber, origin, destination, baseFare);
                    }

                    if (flight != null)
                    {
                        flights.Add(flight);
                    }
                }
            }
        }
        catch (FileNotFoundException)
        {
            Console.WriteLine("The file was not found.");
        }
        catch (IOException ex)
        {
            Console.WriteLine($"An error occurred while reading the file: {ex.Message}");
        }
    }

    // Method to write flight data to a CSV file
    public static void WriteFlightsToCSV(string filePath, List<Flight> flights)
    {
        try
        {
            using (StreamWriter writer = new StreamWriter(filePath))
            {
                foreach (Flight flight in flights)
                {
                    string type = flight is DomesticFlight ? "Domestic" : "International";
                    string line = $"{flight.FlightNumber},{flight.Origin},{flight.Destination},{flight.BaseFare},{type}";
                    writer.WriteLine(line);
                }
            }
            Console.WriteLine("Flight data successfully written to the file.");
        }
        catch (IOException ex)
        {
            Console.WriteLine($"An error occurred while writing to the file: {ex.Message}");
        }
    }
}
