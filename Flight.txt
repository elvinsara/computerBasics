using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static void Main(string[] args)
    {
        // Create a list of flights
        List<Flight> flights = new List<Flight>
        {
            new DomesticFlight("DF123", "New York", "Chicago", 150),
            new DomesticFlight("DF456", "Los Angeles", "San Francisco", 120),
            new InternationalFlight("IF789", "New York", "London", 500),
            new InternationalFlight("IF101", "San Francisco", "Tokyo", 700),
            new DomesticFlight("DF111", "Miami", "Orlando", 90)
        };

        // 1. Filter flights by destination
        var flightsToLondon = from flight in flights
                              where flight.Destination == "London"
                              select flight;

        Console.WriteLine("Flights to London:");
        foreach (var flight in flightsToLondon)
        {
            flight.DisplayDetails();
        }

        Console.WriteLine();

        // 2. Sort flights by fare
        var flightsSortedByFare = from flight in flights
                                  orderby flight.CalculateFare() ascending
                                  select flight;

        Console.WriteLine("Flights sorted by fare:");
        foreach (var flight in flightsSortedByFare)
        {
            flight.DisplayDetails();
        }

        Console.WriteLine();

        // 3. Group flights by category (Domestic vs. International)
        var groupedFlights = from flight in flights
                             group flight by flight.GetType().Name into flightGroup
                             select flightGroup;

        Console.WriteLine("Flights grouped by category:");
        foreach (var group in groupedFlights)
        {
            Console.WriteLine($"Category: {group.Key}");
            foreach (var flight in group)
            {
                flight.DisplayDetails();
            }
        }

        Console.WriteLine();
        
        // BONUS: Using LINQ to find the most expensive flight
        var mostExpensiveFlight = flights.OrderByDescending(f => f.CalculateFare()).First();
        Console.WriteLine("Most expensive flight:");
        mostExpensiveFlight.DisplayDetails();
    }
}
-------------------------------------

var mostExpensiveFlight = flights.OrderByDescending(f => f.CalculateFare()).First();
-------------
//filter with traditional loop
List<Flight> flightsToLondon = new List<Flight>();
foreach (Flight flight in flights)
{
    if (flight.Destination == "London")
    {
        flightsToLondon.Add(flight);
    }
}
//Sorting with Traditional Loops:
List<Flight> flightsSortedByFare = flights.OrderBy(f => f.CalculateFare()).ToList();

